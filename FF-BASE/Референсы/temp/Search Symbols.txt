// Automatic FlutterFlow imports
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/custom_code/widgets/index.dart'; // Imports other custom widgets
import '/custom_code/actions/index.dart'; // Imports custom actions
import '/flutter_flow/custom_functions.dart'; // Imports custom functions
import 'package:flutter/material.dart';
// Begin custom widget code
// DO NOT REMOVE OR MODIFY THE CODE ABOVE!

class SearchText extends StatefulWidget {
  const SearchText({
    super.key,
    this.width,
    this.height,
    required this.fullText,
    this.searchText,
  });

  final double? width;
  final double? height;
  final String fullText;
  final String? searchText;

  @override
  State<SearchText> createState() => _SearchTextState();
}

class _SearchTextState extends State<SearchText> {
  List<TextSpan> _getHighlightedSpans() {
    if (widget.searchText == null || widget.searchText!.trim().isEmpty) {
      return [
        TextSpan(
          text: widget.fullText,
          style: FlutterFlowTheme.of(context).bodyMedium,
        ),
      ];
    }

    final searchText = widget.searchText!.toLowerCase().trim();
    final fullTextLower = widget.fullText.toLowerCase();

    List<TextSpan> spans = [];
    int startIndex = 0;

    while (startIndex < widget.fullText.length) {
      final index = fullTextLower.indexOf(searchText, startIndex);

      if (index == -1) {
        // Добавляем оставшуюся часть текста без выделения
        spans.add(TextSpan(
          text: widget.fullText.substring(startIndex),
          style: FlutterFlowTheme.of(context).bodyMedium,
        ));
        break;
      }

      // Добавляем текст перед совпадением
      if (index > startIndex) {
        spans.add(TextSpan(
          text: widget.fullText.substring(startIndex, index),
          style: FlutterFlowTheme.of(context).bodyMedium,
        ));
      }

      // Выделяем совпавшую часть текста
      spans.add(TextSpan(
        text: widget.fullText.substring(index, index + searchText.length),
        style: FlutterFlowTheme.of(context).bodyMedium.copyWith(
              backgroundColor: Colors.yellow,
              color: Colors.black,
            ),
      ));

      startIndex = index + searchText.length;
    }

    return spans;
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      width: widget.width ?? double.infinity,
      height: widget.height ?? 50.0, // Высота по умолчанию
      constraints: const BoxConstraints(
        minHeight: 20.0, // Минимальная высота для избежания ошибок компоновки
      ),
      child: RichText(
        text: TextSpan(
          children: _getHighlightedSpans(),
          style: FlutterFlowTheme.of(context).bodyMedium,
        ),
        overflow: TextOverflow.ellipsis,
      ),
    );
  }
}
